@page "/counter"
@using MQTTnet
@using MQTTnet.Client
@using System.Net
@using Microsoft.Extensions.ServiceDiscovery
@using System.Text.Json
@using System.Text
@rendermode InteractiveServer
@inject ServiceEndpointResolver serviceEndpointResolver

<PageTitle>Robot Remote</PageTitle>


<label for="base">Base Rotation</label>
<input type="range" class="form-range" id="base" min="0" max="180" value="90" @onchange="PublishMessage" />

@code {

    private async Task PublishMessage(ChangeEventArgs e)
    {
        var mqttFactory = new MqttFactory();

        using (var mqttClient = mqttFactory.CreateMqttClient())
        {
            var endpointsSource = await serviceEndpointResolver.GetEndpointsAsync("tcp://mqtt-server", CancellationToken.None);

            // This is hacky!!
            // https://github.com/dotnet/aspire/issues/4224
            var uri = new Uri(endpointsSource.Endpoints.First().EndPoint.ToString());

            var mqttClientOptions = new MqttClientOptionsBuilder()
                .WithConnectionUri(uri)
                .WithClientId(Environment.GetEnvironmentVariable("MQTT_CLIENTID"))
                .WithCredentials(
                    Environment.GetEnvironmentVariable("MQTT_USERNAME"),
                    Environment.GetEnvironmentVariable("MQTT_PASSWORD"))
                .Build();

            await mqttClient.ConnectAsync(mqttClientOptions, CancellationToken.None);

            var applicationMessage = new MqttApplicationMessageBuilder()
                .WithTopic($"servo/{Servos.Base}")
                .WithPayload(Encoding.ASCII.GetBytes(e.Value?.ToString() ?? "90"))
                .Build();

            await mqttClient.PublishAsync(applicationMessage, CancellationToken.None);

            await mqttClient.DisconnectAsync();
        }
    }
}
